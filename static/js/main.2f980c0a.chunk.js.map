{"version":3,"sources":["pages/Synth.js","pages/Sequencer.js","index.js"],"names":["Synth","this","ctx","window","AudioContext","webkitAudioContext","notes","state","length","osc","createOscillator","type","toLowerCase","frequency","value","delay","createDelay","delayTime","bpm","vca","createGain","gain","connect","destination","start","setTimeout","setTargetAtTime","currentTime","release","defaultPads","getNotesForOctave","octave","Object","keys","NOTES","reduce","note","split","pop","String","Sequencer","props","pads","step","steps","playing","handleChange","bind","handleSubmit","generateMelody","myRef","React","createRef","melodyrnn","mm","rnnPlayer","noteSeq","pitch","startTime","endTime","totalTime","rnnSteps","rnnTemp","a","event","setState","content","target","console","log","isPlaying","stop","qns","quantizeNoteSequence","continueSequence","resultSeq","pause","play","Number","synth","notesArray","map","key","interval","setInterval","next","pad","i","filter","x","playNotes","clearInterval","group","clonedPads","slice","padState","StrictMode","className","reverse","groupIndex","id","cx","active","on","onClick","togglePad","min","max","defaultValue","onChange","e","changeBPM","data-label","changeWaveType","changeOctave","changeRelease","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f980c0a.chunk.js","sourcesContent":["export default class Synth {\n  constructor() {\n    this.ctx = new (window.AudioContext || window.webkitAudioContext)()\n  }\n\n  playNotes(notes = [], state = {}) {\n    if (notes.length <= 0) return\n\n    const osc = this.ctx.createOscillator()\n    osc.type = state.type.toLowerCase()\n    osc.frequency.value = notes[0]\n\n    const delay = this.ctx.createDelay()\n    delay.delayTime.value = state.delay ? state.bpm / 2000 : 0\n\n    // VCA\n    const vca = this.ctx.createGain()\n    vca.gain.value = 1\n\n    // Connections\n    osc.connect(vca)\n    vca.connect(delay)\n    vca.connect(this.ctx.destination)\n    delay.connect(this.ctx.destination)\n\n    osc.start(0)\n\n    setTimeout(() => {\n      vca.gain.setTargetAtTime(0, this.ctx.currentTime, 0.015)\n    }, state.release)\n  }\n}","import * as mm from \"@magenta/music\";\n\nimport React, { Component } from \"react\";\n// import Header from \"../components/Header\";\n// import Footer from \"../components/Footer\";\nimport '../styles/Sequencer.scss';\n\nimport Synth from './Synth';\nimport cx from 'classnames';\n\nimport NOTES from '../resources/notes';\n\n// tranpose for visual\nconst defaultPads = [\n\t[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n  ]\n\n// const defaultSequence = [\n\n// ]\n\nconst getNotesForOctave = octave =>\n  Object.keys(NOTES).reduce((state, note) => {\n    if (note.split('').pop() === String(octave)) state[note] = NOTES[note]\n    return state\n  }, {})\n\nclass Sequencer extends Component {\n\tconstructor(props) {\n\t\tsuper()\n\t\tthis.state = {\n\n\t\t\t\n\t\t\t// music stuff\n\t\t\ttype: 'sine',\n\t\t\tpads: defaultPads,\n\t\t\tbpm: 150,\n\t\t\trelease: 100,\n\t\t\tstep: -1,\n\t\t\tsteps: 16,\n\t\t\tplaying: false,\n\t\t\toctave: 4,\n\t\t\tdelay: false,\n\t\t\tnotes: getNotesForOctave(4)\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.generateMelody = this.generateMelody.bind(this);\n\n\t\tthis.myRef = React.createRef();\n\n\t\t// initalize melodyRNN\n\t\tthis.melodyrnn = new mm.MusicRNN(\n\t\t\t\"https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/melody_rnn\"\n\t\t);\n\n\t\t// initalize a basic sequence player\n\t\tthis.rnnPlayer = new mm.Player();\n\n\t\t// twinkle twinkle\n\t\tthis.noteSeq = {\n\t\t\tnotes: [\n\t\t\t  {pitch: 60, startTime: 0.0, endTime: 0.5},\n\t\t\t  {pitch: 60, startTime: 0.5, endTime: 1.0},\n\t\t\t  {pitch: 67, startTime: 1.0, endTime: 1.5},\n\t\t\t  {pitch: 67, startTime: 1.5, endTime: 2.0},\n\t\t\t  {pitch: 69, startTime: 2.0, endTime: 2.5},\n\t\t\t  {pitch: 69, startTime: 2.5, endTime: 3.0},\n\t\t\t  {pitch: 67, startTime: 3.0, endTime: 4.0},\n\t\t\t  {pitch: 65, startTime: 4.0, endTime: 4.5},\n\t\t\t  {pitch: 65, startTime: 4.5, endTime: 5.0},\n\t\t\t  {pitch: 64, startTime: 5.0, endTime: 5.5},\n\t\t\t  {pitch: 64, startTime: 5.5, endTime: 6.0},\n\t\t\t  {pitch: 62, startTime: 6.0, endTime: 6.5},\n\t\t\t  {pitch: 62, startTime: 6.5, endTime: 7.0},\n\t\t\t  {pitch: 60, startTime: 7.0, endTime: 8.0},  \n\t\t\t],\n\t\t\ttotalTime: 8\n\t\t};\n\n\t\t// the number of steps the new sequence will be\n\t\tthis.rnnSteps = 20;\n\n\t\t// randomness\n\t\tthis.rnnTemp = 1.5;\n\t}\n\t\n\tasync componentDidMount() {\n\n\t}\n\t\n\thandleChange(event) {\n\t\tthis.setState({\n\t\tcontent: event.target.value\n\t\t});\n\t}\n\t\n\tasync handleSubmit(event) {\n\n\t}\n\n\tasync generateMelody() {\n\t\tconsole.log(\"generating melody\");\n\t\tif (this.rnnPlayer.isPlaying()) {\n\t\t\tthis.rnnPlayer.stop();\n\t\t\treturn;\n\t\t}\n\t\t\t\n\t\ttry {\n\t\t\t// The model expects a quantized sequence, and ours was unquantized:\n\t\t\tconst qns = mm.sequences.quantizeNoteSequence(this.noteSeq, 4);\n\t\t\t  \n\t\t\tlet resultSeq = await this.melodyrnn.continueSequence(\n\t\t\t\tqns,\n\t\t\t\tthis.rnnSteps,\n\t\t\t\tthis.rnnTemp\n\t\t\t)\n\t\t\tconsole.log('the result sequence is: ', resultSeq)\n\t\t\t// this.melodyrnn\n\t\t\t// .continueSequence(this.noteSeq, 20, 1.5)\n\t\t\t// .then((sample) => this.rnnPlayer.start(sample));\n\t\t\tthis.rnnPlayer.start(resultSeq);\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\t\n\t\tchangeRelease(release) {\n\t\t\tthis.setState(\n\t\t\t  {\n\t\t\t\trelease\n\t\t\t  },\n\t\t\t  () => {\n\t\t\t\tthis.pause()\n\t\t\n\t\t\t\tif (this.state.playing) this.play()\n\t\t\t  }\n\t\t\t)\n\t\t  }\n\t\t\n\t\t  changeBPM(bpm) {\n\t\t\tif (bpm > 300 || bpm < 60) return\n\t\t\n\t\t\tthis.setState(\n\t\t\t  () => ({\n\t\t\t\tbpm\n\t\t\t  }),\n\t\t\t  () => {\n\t\t\t\tthis.pause()\n\t\t\n\t\t\t\tif (this.state.playing) this.play()\n\t\t\t  }\n\t\t\t)\n\t\t  }\n\t\t\n\t\t  changeWaveType(type) {\n\t\t\tthis.setState(\n\t\t\t  () => ({\n\t\t\t\ttype\n\t\t\t  }),\n\t\t\t  () => {\n\t\t\t\tthis.pause()\n\t\t\n\t\t\t\tif (this.state.playing) this.play()\n\t\t\t  }\n\t\t\t)\n\t\t  }\n\t\t\n\t\t  changeOctave(octave) {\n\t\t\tthis.setState(\n\t\t\t  {\n\t\t\t\toctave: Number(octave),\n\t\t\t\tnotes: getNotesForOctave(Number(octave))\n\t\t\t  },\n\t\t\t  () => {\n\t\t\t\tthis.pause()\n\t\t\n\t\t\t\tif (this.state.playing) this.play()\n\t\t\t  }\n\t\t\t)\n\t\t  }\n\t\t\n\t\t  play() {\n\t\t\tthis.synth = new Synth()\n\t\t\n\t\t\tconst { bpm, notes, type, release, delay } = this.state\n\t\t\tconst notesArray = Object.keys(notes).map(key => notes[key])\n\t\t\n\t\t\tthis.setState(() => ({\n\t\t\t  playing: true\n\t\t\t}))\n\t\t\n\t\t\tthis.interval = setInterval(() => {\n\t\t\t  this.setState(\n\t\t\t\tstate => ({\n\t\t\t\t  step: state.step < state.steps - 1 ? state.step + 1 : 0\n\t\t\t\t}),\n\t\t\t\t() => {\n\t\t\t\t  const next = this.state.pads[this.state.step]\n\t\t\t\t\t.map((pad, i) => (pad === 1 ? notesArray[i] : null))\n\t\t\t\t\t.filter(x => x)\n\t\t\n\t\t\t\t  this.synth.playNotes(next, {\n\t\t\t\t\trelease,\n\t\t\t\t\tbpm,\n\t\t\t\t\ttype,\n\t\t\t\t\tdelay\n\t\t\t\t  })\n\t\t\t\t}\n\t\t\t  )\n\t\t\t}, (60 * 1000) / this.state.bpm / 2)\n\t\t  }\n\t\t\n\t\t  pause() {\n\t\t\tthis.setState(() => ({\n\t\t\t  playing: false,\n\t\t\t  step: 0\n\t\t\t}))\n\t\t\n\t\t\tclearInterval(this.interval)\n\t\t  }\n\t\t\n\t\t  togglePad(group, pad) {\n\t\t\tthis.setState(state => {\n\t\t\t  const clonedPads = state.pads.slice(0)\n\t\t\t  const padState = clonedPads[group][pad]\n\t\t\n\t\t\t  clonedPads[group] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\t\t\t  clonedPads[group][pad] = padState === 1 ? 0 : 1\n\t\t\t  return {\n\t\t\t\tpads: clonedPads\n\t\t\t  }\n\t\t\t})\n\t\t}\n\n\t\n\trender() {\n\n\t\tconst { pads, step, notes } = this.state\n\n\t\treturn (\n\t\t<React.StrictMode>\n\n\t\t<div>\n\t\t\t{/* <Header /> */}\n\t\n\t\t\t{/* <div className=\"chat-area\" ref={this.myRef}> */}\n\t\t\t{/* <span className=\"sr-only\">SEQUENCER</span>\n\t\t\t</div> */}\n\n\n        {/* <div className=\"container\"> */}\n\n\t\t\t<div className=\"board\">\n          <div className=\"Sequencer\">\n\n\t\t\t<div className=\"seq-wrapper\">\n\n            <ul className=\"notes\">\n              {Object.keys(notes)\n                .slice(0, 12)\n                .reverse()\n                .map(note => (\n                  <li key={`note-${note}`}>{note.slice(0, note.length - 1)}</li>\n                ))}\n            </ul>\n\n\t\t\t\t\t<div className=\"pad-wrapper\">\n            <div className=\"flex\">\n              {pads.map((group, groupIndex) => (\n\t\t\t\t//   column\n                <div key={`pad-${groupIndex}`} className=\"pads\">\n\t\t\t\t\t{/* individual key */}\n                  {group.map((pad, i) => (\n                    <div\n                      key={`pad-group-${i}`}\n\t\t\t\t\t  id={`pad-group-${i}`}\n                      className={cx('pad', {\n                        active: groupIndex === step, // used to highlight col when playinng\n                        on: pad === 1, // used to determine if pad is toggled on\n\t\t\t\t\t\n                      })}\n                      onClick={() => {\n                        this.togglePad(groupIndex, i)\n                      }}\n                    />\n                  ))}\n                </div>\n              ))}\n            </div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\n          </div>\n\t\t  <div className=\"buttons\">\n\t\t\t  <div className=\"button-wrapper\">\n              <button\n                type=\"button\"\n                className={this.state.playing ? 'active' : ''}\n                onClick={() => {\n                  if (this.state.playing) this.pause()\n                  else this.play()\n                }}\n              >\n                play\n              </button>\n\n              <div className=\"select-wrapper\">\n                <span>bpm</span>\n                <input\n                  type=\"number\"\n                  min=\"80\"\n                  max=\"300\"\n                  step=\"1\"\n                  defaultValue={this.state.bpm}\n                  onChange={e => this.changeBPM(e.target.value)}\n                />\n              </div>\n\n              <div className=\"select-wrapper\">\n                <span>wave</span>\n                <select\n                  value={this.state.type}\n                  data-label=\"wave\"\n                  className=\"wave\"\n                  onChange={e => this.changeWaveType(e.target.value)}\n                >\n                  <option>sine</option>\n                  <option>square</option>\n                  <option>sawtooth</option>\n                  <option>triangle</option>\n                </select>\n              </div>\n\n              <div className=\"select-wrapper\">\n                <span>octave</span>\n                <select\n                  value={this.state.octave}\n                  data-label=\"octave\"\n                  className=\"octave\"\n                  onChange={e => this.changeOctave(e.target.value)}\n                >\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                  <option>6</option>\n                  <option>7</option>\n                </select>\n              </div>\n\n              <div className=\"select-wrapper\">\n                <span>release</span>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"400\"\n                  step=\"1\"\n                  defaultValue={this.state.release}\n                  onChange={e => this.changeRelease(e.target.value)}\n                />\n              </div>\n\n              <button\n                type=\"button\"\n                className={cx({ active: this.state.delay })}\n                onClick={() => {\n                  this.setState(\n                    state => ({\n                      delay: !state.delay\n                    }),\n                    () => {\n                      this.pause()\n                      if (this.state.playing) this.play()\n                    }\n                  )\n                }}\n              >\n                delay\n              </button>\n            </div>\n\t\t\t</div>\n        {/* </div> */}\n\n\n\n\t\t\t{/* <Button outline color=\"primary\" size=\"lg\" block onClick={this.generateMelody}>generate melody</Button> */}\n\t\t\t{/* render email of currently logged in user */}\n\t\t\t{/* <div className=\"user-info\">\n\t\t\tLogged in as: <strong className=\"email\">{this.state.user.email}</strong>\n\t\t\t</div>\n\t\t\t<Footer /> */}\n\t\t</div>\n\t\t</React.StrictMode>\n\n\t\t);\n\n\t}\n}\n\nexport default Sequencer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\nimport Sequencer from './pages/Sequencer';\nimport './styles/App.scss';\n\nReactDOM.render(<Sequencer />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}